using System;
using System.Collections.Generic;
using System.Text;

namespace Isen.AntoineBerenguer.Library
{
    /// <summary>
    /// Interface for a tree node containing a GUID, a string value, a parent if applicable and a list of children nodes. Can be checked for equality with another node.
    /// </summary>
    interface INode : IEquatable<Node>
    {
        /// <summary>
        /// The value attached to the node.
        /// </summary>
        string Value { get; set; }
        /// <summary>
        /// The GUID attached to the node. Autogenerated.
        /// </summary>
        Guid Id { get; }
        /// <summary>
        /// The parent of the node, if it exists. Null otherwise.
        /// </summary>
        Node Parent { get; set; }
        /// <summary>
        /// A list containing all children of the node, if any. Empty otherwise.
        /// </summary>
        List<Node> Children { get; set; }
        /// <summary>
        /// The number of ancestors a node has. The root of a tree has a depth of 0.
        /// </summary>
        int Depth { get; }
    }
}
